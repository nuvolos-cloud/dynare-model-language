{
    "name": "Dynare",
    "scopeName": "source.dynare",
    "fileTypes": [
        "mod",
        "dyn"
    ],
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#preprocessor-directives"
        },
        {
            "include": "#blocks"
        },
        {
            "include": "#function-keywords"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#literals"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#identifiers"
        },
        {
            "include": "#punctuation"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.percentage.dynare",
                    "match": "%.*$"
                },
                {
                    "name": "comment.line.double-slash.dynare",
                    "match": "//.*$"
                },
                {
                    "name": "comment.block.dynare",
                    "begin": "/\\*",
                    "end": "\\*/",
                    "patterns": [
                        {
                            "include": "#comments"
                        }
                    ]
                }
            ]
        },
        "preprocessor-directives": {
            "patterns": [
                {
                    "name": "keyword.control.preprocessor.dynare",
                    "match": "@#\\s*(ifndef|ifdef|else|elseif|endif|define|include|undef|if)\\b"
                }
            ]
        },
        "blocks": {
            "patterns": [
                {
                    "name": "meta.block.dynare",
                    "begin": "\\b(model|steady_state_model|initval|endval|histval|filter_initial_state|shocks|heteroskedastic_shocks|shock_groups|init2shocks|mshocks|estimated_params|priors|estimated_params_init|estimated_params_bounds|estimated_params_remove|osr_params_bounds|observation_trends|deterministic_trends|optim_weights|homotopy_setup|conditional_forecast_paths|svar_identification|moment_calibration|irf_calibration|ramsey_constraints|generate_irfs|matched_moments|occbin_constraints|model_replace|pac_target_info|matched_irfs|matched_irfs_weights)\\b",
                    "end": "\\bend\\b",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.control.block.begin.dynare"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "keyword.control.block.end.dynare"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#keywords"
                        },
                        {
                            "include": "#function-keywords"
                        },
                        {
                            "include": "#strings"
                        },
                        {
                            "include": "#numbers"
                        },
                        {
                            "include": "#operators"
                        },
                        {
                            "include": "#identifiers"
                        },
                        {
                            "include": "#punctuation"
                        },
                        {
                            "include": "#comments"
                        },
                        {
                            "include": "#preprocessor-directives"
                        }                
                    ]
                }
            ]
        },
        "function-keywords": {
            "patterns": [
                {
                    "name": "keyword.function.dynare",
                    "match": "\\b(alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\\b(?=\\s*\\()"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.dynare",
                    "match": "\\b(var|varexo|varexo_det|corr|stderr|trend_var|log_trend_var|predetermined_variables|parameters|model_local_variable|heterogeneity_dimension|model_info|estimation|set_time|data|varobs|varexobs|unit_root_vars|rplot|osr_params|osr|dynatype|dynasave|model_comparison|change_type|load_params_and_steady_state|save_params_and_steady_state|write_latex_dynamic_model|write_latex_static_model|write_latex_original_model|write_equation_tags|write_latex_steady_state_model|write_latex_definitions|write_latex_parameter_table|steady|check|simul|stoch_simul|var_model|trend_component_model|var_expectation_model|pac_model|dsample|planner_objective|ramsey_model|ramsey_policy|evaluate_planner_objective|occbin_setup|occbin_solver|occbin_write_regimes|occbin_graph|discretionary_policy|identification|bvar_density|bvar_forecast|bvar_irf|sensitivity|dynare_sensitivity|initval_file|histval_file|forecast|shock_decomposition|realtime_shock_decomposition|plot_shock_decomposition|initial_condition_decomposition|squeeze_shock_decomposition|sbvar|ms_estimation|ms_simulation|ms_compute_mdd|ms_compute_probabilities|ms_forecast|ms_irf|ms_variance_decomposition|conditional_forecast|plot_conditional_forecast|method_of_moments|markov_switching|svar|svar_global_identification_check|external_function|calib_smoother|model_diagnostics|extended_path|smoother2histval|perfect_foresight_setup|perfect_foresight_solver|perfect_foresight_with_expectation_errors_setup|perfect_foresight_with_expectation_errors_solver|compilation_setup|model_remove|model_options|var_remove|resid|model|steady_state_model|initval|endval|histval|filter_initial_state|shocks|heteroskedastic_shocks|shock_groups|init2shocks|mshocks|estimated_params|priors|estimated_params_init|estimated_params_bounds|estimated_params_remove|osr_params_bounds|observation_trends|deterministic_trends|optim_weights|homotopy_setup|conditional_forecast_paths|svar_identification|moment_calibration|irf_calibration|ramsey_constraints|generate_irfs|matched_moments|occbin_constraints|model_replace|pac_target_info|matched_irfs|matched_irfs_weights|filtered_theoretical_moments_grid|simul_seed|qz_criterium|qz_zero_threshold|simul_replic|datafile|xls_sheet|xls_range|series|mode_compute|silent_optimizer|mode_check|mh_replic|mh_nblocks|mh_jscale|mh_recover|mh_initialize_from_previous_mcmc|mh_initialize_from_previous_mcmc_directory|mh_initialize_from_previous_mcmc_record|mh_initialize_from_previous_mcmc_prior|planner_discount|planner_discount_latex_name|calibration|irf_plot_threshold|no_homotopy|particle_filter_options|constant_simulation_length|chain|number_of_lags|number_of_regimes|duration|coefficients|variances|equations|time_shift|structural|stderr_multiples|diagonal_only|equation|exclusion|lag|coeff|overwrite|learnt_in|subsamples|options|prior|name|long_name|bind|relax|order|irf|periods|bayesian_irf|moments_varendo|contemporaneous_correlation|conditional_variance_decomposition|tex|graph_format|pdf|smoother|filter_covariance|filter_decomposition|filtered_vars|filter_step_ahead|smoothed_state_uncertainty|gamma_pdf|beta_pdf|normal_pdf|inv_gamma_pdf|inv_gamma1_pdf|inv_gamma2_pdf|uniform_pdf|weibull_pdf|dsge_var|dsge_prior_weight|balanced_growth_test_tol|heteroskedastic_filter|gmm|smm|weighting_matrix|weighting_matrix_scaling_factor|analytic_standard_errors|analytic_jacobian|mom_method|simulation_method|penalized_estimator|verbose|simulation_multiple|burnin|seed|se_tolx|bounded_shock_support|irf_matching_file|add_tiny_number_to_cholesky|steady_solve_algo|steady_maxit|steady_tolf|steady_tolx)(?!\\w)"
                }
            ]
        },
        "literals": {
            "patterns": [
                {
                    "name": "constant.language.boolean.dynare",
                    "match": "\\b(true|false)\\b"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.dynare",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.dynare",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "string.quoted.single.dynare",
                    "begin": "'",
                    "end": "'",
                    "patterns": [
                        {
                            "name": "constant.character.escape.dynare",
                            "match": "\\\\."
                        }
                    ]
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.dynare",
                    "match": "\\b\\d+(\\.\\d+)?([eE][-+]?\\d+)?\\b"
                },
                {
                    "name": "constant.numeric.date.dynare",
                    "match": "-?\\d+(?:[ya]|m(?:[1-9]|1[0-2])|q[1-4]|[sh][12])"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.dynare",
                    "match": "(\\+|\\-|\\*|/|==|!=|<=|>=|<|>|\\^|=)"
                }
            ]
        },
        "identifiers": {
            "patterns": [
                {
                    "name": "variable.function.dynare",
                    "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b(?=\\s*\\()",
                    "captures": {
                        "0": {
                            "name": "entity.name.function.dynare"
                        }
                    }
                },
                {
                    "name": "variable.other.dynare",
                    "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
                }
            ]
        },
        "punctuation": {
            "patterns": [
                {
                    "name": "punctuation.separator.dynare",
                    "match": "[,;]"
                },
                {
                    "name": "punctuation.parenthesis.dynare",
                    "match": "[\\(\\)\\[\\]\\{\\}]"
                }
            ]
        }
    }
}